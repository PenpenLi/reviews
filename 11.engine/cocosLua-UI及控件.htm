<!doctype html>
<!--STATUS OK-->
<html lang="zh-cn">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <!--<link href="//s2.pstatp.com/cdn/expire-1-m/twitter-bootstrap/4.2.1/css/bootstrap.min.css" type="text/css" rel="stylesheet" />-->
    <!--<script src="//s1.pstatp.com/cdn/expire-1-m/jquery/2.2.4/jquery.min.js" type="application/javascript"></script>-->
    <link href="https://cdn.bootcss.com/twitter-bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet">    
    <script src="https://cdn.bootcss.com/twitter-bootstrap/4.3.1/js/bootstrap.min.js"></script>
    
    <link href="//s3.pstatp.com/cdn/expire-1-M/font-awesome/4.7.0/css/font-awesome.min.css" type="text/css" rel="stylesheet" />
    <!--<script src="https://cdn.staticfile.org/vue/2.2.2/vue.min.js"></script>-->
    <link rel="stylesheet" href="/template/net2019/css.css?23">
    <title>Cocos-Lua UI及控件 / bnee小站</title>
        <meta name="keywords" content="三个臭皮匠抵得一个诸葛亮">
            <meta name="description" content="Cocos-Lua UI及控件 -----------------------------LayerColor-------------------------------- local layer = cc.LayerColor:create(cc.c4b(0, 0, 0, 180)) layer:addChild(layer) ------------------------------Label1-------------------------------- local textContent = cc.Label:c">
            
</head>
<body>
<header>
  <div class="container-fulid solid1">
    <div class="container height32 font_size_85em" >
      <div style="float: left;">
         <a href="/index.php">首页</a>
      </div>
      <div style="float: right">
        登录 | 注册
      </div>
      <div style="clear: both;"></div>
    </div>
  </div>
  
  <div class="container">
     <div class="row align-items-center"  style="height: 78px;">
          <div class="col-8 d-none d-xl-block">
            

          </div> 
      <div class="col">
            <div class="search">
        <div class="bar6">
          <form method="post" id="searchform" action="/search/">
              <input type="text" value="" name="keyword" id="keyword" title="search"  placeholder="请输入您要搜索的内容...">
              <input type="submit" value="搜 索" id="searchsubmit"></input>
          </form>
        </div>    
        </div>
      </div>
    
    </div>
  </div>
  
    <nav class="container-fulid bg-success mbottom15">
    <div class="container height45">
      <ul class="navlist font_size_125em">
        <li><a class="padding_right_left_15" href="/index.php">首页</a></li> 
      </ul>
    </div>
  </nav>
  </header>
<div class="container">
	<div class="row">
		<div class="col-md-8">
		
		<h1 class="htitle">Cocos-Lua UI及控件</h1>
		
				<div id="tags">
		            <a href="http://www.bnee.net/tag/sangechoupijiangdideyigezhugeliang/" title="三个臭皮匠抵得一个诸葛亮" class="btn btn-outline-info btn-sm">三个臭皮匠抵得一个诸葛亮</a>		        </div>
		
		    		    
		    
			<section>
				<article class="clearfix" id="content">
					-----------------------------LayerColor--------------------------------<br />
local layer = cc.LayerColor:create(cc.c4b(0, 0, 0, 180))<br />
layer:addChild(layer)<br /><br />
------------------------------Label1--------------------------------<br />
local textContent = cc.Label:createWithTTF("", "2.ttf", fontSize) --字符串、ttf字体文件、字体大小<br />
--ttfLabel = cc.Label:create("", activeLayer:GetTtfFont(), 22)    <br />
textContent:setTextVerticalAlignment(cc.TextVAlignment.CENTER) --垂直对齐方式<br />
textContent:setTextHorizontalAlignment(cc.TextHAlignment.LEFT) --水平对齐方式<br />
textContent:setDimensions(520, 520)<br />
textContent:enableOutline(cc.c4b(87, 0, 0, 255), 1.5) --描边<br />
textContent:setAnchorPoint(cc.p(0,0.5)) --锚点<br />
--中间(0.5f, 0.5f);<br />
--左下角(0.0f, 0.0f);<br />
--左上角(0.0f, 1.0f);<br />
--右下角(1.0f, 0.0f);<br />
--右上角(1.0f, 1.0f);<br />
--右中间(1.0f, 0.5f);<br />
--左中间(0.0f, 0.5f);<br />
--上中间(0.5f, 1.0f);<br />
--下中间(0.5f, 0.0f);<br />
textContent:setPosition(620, 300)<br />
layer:addChild(textContent)<br />
------------------------------Label2--------------------------------<br />
local textContent = cc.Label:create("", "2.ttf", fontSize) --字符串、ttf字体文件、字体大小<br />
textContent:setAlignment(cc.TEXT_ALIGNMENT_LEFT,cc.VERTICAL_TEXT_ALIGNMENT_CENTER)<br />
-- textContent:setHorizontalAlignment(1)<br />
-- textContent:setVerticalAlignment(1)<br />
textContent:setDimensions(520, 520)<br />
textContent:setTextColor(cc.c4b(0xff, 0xf6, 0x00, 0xff))<br />
textContent:setVisible(false)<br />
textContent:enableBold()<br />
textContent:setSkewX(15)<br />
textContent:setAdditionalKerning(-2)<br />
textContent:enableOutline(cc.c4b(87, 0, 0, 255), 1.5) --描边<br />
textContent:setAnchorPoint(cc.p(0,0.5)) --锚点<br />
textContent:enableShadow(cc.c4b(0, 0, 0, 255), cc.size(0, -1),0)<br />
--中间(0.5f, 0.5f);<br />
--左下角(0.0f, 0.0f);<br />
--左上角(0.0f, 1.0f);<br />
--右下角(1.0f, 0.0f);<br />
--右上角(1.0f, 1.0f);<br />
--右中间(1.0f, 0.5f);<br />
--左中间(0.0f, 0.5f);<br />
--上中间(0.5f, 1.0f);<br />
--下中间(0.5f, 0.0f);<br />
textContent:setPosition(620, 300)<br />
layer:addChild(textContent)<br /><br />
------------------------------LabelAtlas--------------------------------<br />
local label = cc.LabelAtlas:_create("HelloWorld", "fonts/tuffy_bold_italic-charmap.png", 48, 66, string.byte(" "))<br />
label:setPosition(cc.p(size.width/2  - label:getContentSize().width / 2,size.height - label:getContentSize().height))   <br />
layer:addChild(label, 1)<br /><br />
------------------------------LabelBMFont--------------------------------<br />
local label = cc.LabelBMFont:create("HelloWorld", "fonts/BMFont.fnt")    <br />
label:setPosition(cc.p(size.width/2,size.height - label:getContentSize().height))   <br />
layer:addChild(label, 1)<br />
------------------------------Sprite--------------------------------<br />
local frameCache = cc.SpriteFrameCache:getInstance()<br />
frameCache:addSpriteFramesWithFile("SpirteSheet.plist")<br /><br />
--第一种<br />
local bgSprite = cc.Sprite:create("facebooklike.png")--从本地获取<br />
bgSprite:initWithFile(activeLayer:addImgFile(string.format("%sac_xz_%d.png", activePath,id)))<br />
bgSprite:setPosition(630, 280)<br />
btCue1:setLocalZOrder(1)<br />
btCue1:setBrightStyle(0)--只有0和1、-1 NONE = -1,NORMAL = 0,HIGHLIGHT = 1<br />
mainLayer:addChild(bgSprite)<br /><br />
--第二种<br />
local tree1 = cc.Sprite:create("tree1.png",cc.rect(604, 38, 302, 295))<br />
tree1:setPosition(cc.p(200,230))<br />
layer:addChild(tree1,0)<br /><br />
--第三种<br />
local cache = cc.Director:getInstance():getTextureCache():addImage("tree1.png")<br />
local tree2 = cc.Sprite:create()<br />
tree2:setTexture(cache)<br />
tree2:setTextureRect(cc.rect(73, 72,182,270))<br />
tree2:setPosition(cc.p(500,200))<br />
layer:addChild(tree2,0)<br /><br />
--第四种<br />
local hammerSprite = cc.Sprite:createWithSpriteFrameName("cr_hammer_icon_b.png")--从plist文件获取<br />
--hammerSprite:initWithSpriteFrameName("ac_everyday_public_bg.png")<br />
hammerSprite:setPosition(150, 220)<br />
imgIcon:addChild(hammerSprite, 5)<br /><br />
--第五种<br />
local frameCrop = cc.SpriteFrame:create("crop.png", cc.rect(0, 0, 105, 95))<br />
local spriteCrop = cc.Sprite:createWithSpriteFrame(frameCrop);<br />
spriteCrop:setPosition(210, 40 )<br />
layerFarm:addChild(spriteCrop)<br /><br />
--第六种<br />
local heroSpriteFrame = frameCache:getSpriteFrameByName("hero1.png")<br />
local hero1 = cc.Sprite:createWithSpriteFrame(heroSpriteFrame)<br />
hero1:setPosition(cc.p(800,200))<br />
layer:addChild(hero1,0)<br /><br />
------------------------------MenuItemSprite--------------------------------<br />
local function callback()<br />
    --实现内容<br />
end<br />
local normalSp = cc.Sprite:create("facebooklike_normal.png")<br />
local pressSp = cc.Sprite:create("facebooklike_press.png")<br />
local disableSp = cc.Sprite:create("facebooklike_press.png")<br />
--或者<br />
-- local normalSp = cc.Scale9Sprite:createWithSpriteFrameName("facebooklike_normal.png")--可以从本地获取也可以从plist文件获取<br />
-- local pressSp = cc.Scale9Sprite:createWithSpriteFrameName("facebooklike_normal.png")<br />
-- local normalSp:setContentSize(cc.size(170, 60))<br />
-- local pressSp:setContentSize(cc.size(170, 60))<br />
-- btReg:setNormalImage(btn_normal)<br />
-- btReg:setSelectedImage(btn_normal)<br />
-- btReg:setDisabledImage(btn_normal)<br />
-- btReg:setEnabled(false)<br />
local btReg = cc.MenuItemSprite:create(normalSp,pressSp,disableSp)<br />
btReg:registerScriptTapHandler(callback)<br />
local btMenu = cc.Menu:create(btReg)<br />
btMenu:setPosition(720, 75)<br />
layer:addChild(btMenu, 2)<br />
------------------------------MenuItemImage--------------------------------<br />
local menuPopupItem = cc.MenuItemImage:create("menu2.png", "menu2.png")<br />
menuPopupItem:setPosition(0, 0)<br />
menuPopupItem:registerScriptTapHandler(menuCallbackClosePopup)<br />
menuPopup = cc.Menu:create(menuPopupItem)<br />
menuPopup:setPosition(480.320)<br />
menuPopup:setVisible(false)<br />
layer:addChild(menuPopup)<br /><br />
local function menuCallbackClosePopup()<br />
    --实现内容<br />
end<br /><br />
------------------------------MenuItemFont、MenuItemLabel--------------------------------<br />
cc.MenuItemFont:setFontName("Times New Roman")<br />
cc.MenuItemFont:setFontSize(86)<br /><br />
local item1 = cc.MenuItemFont:create("Start")<br />
local function menuItem1Callback(sender)<br />
    cclog("Touch Start Menu Item.")<br />
end<br />
item1:registerScriptTapHandler(menuItem1Callback)<br /><br />
local  labelAtlas = cc.LabelAtlas:create("Help","menu/tuffy_bold_italic-charmap.png", 48, 65, string.byte(' '))<br />
local  item2 = cc.MenuItemLabel:create(labelAtlas)<br />
local function menuItem2Callback(sender)<br />
    cclog("Touch Help Menu Item.")<br />
end<br />
item2:registerScriptTapHandler(menuItem2Callback)<br /><br />
local mn = cc.Menu:create(item1, item2)<br />
mn:alignItemsVertically()<br />
layer:addChild(mn)<br /><br />
------------------------------MenuItemToggle------------------------------<br />
-- 音效<br />
local soundOnMenuItem = cc.MenuItemImage:create("menu/on.png", "menu/on.png")<br />
local soundOffMenuItem = cc.MenuItemImage:create("menu/off.png", "menu/off.png")<br />
local soundToggleMenuItem = cc.MenuItemToggle:create(soundOnMenuItem, soundOffMenuItem)<br />
soundToggleMenuItem:setPosition(director:convertToGL(cc.p(818, 220)))  <br />
local function menuSoundToggleCallback(sender)<br />
    cclog("Sound Toggle.")<br />
end<br />
soundToggleMenuItem:registerScriptTapHandler(menuSoundToggleCallback)<br /><br />
-- 音乐<br />
local musicOnMenuItem = cc.MenuItemImage:create("menu/on.png", "menu/on.png")<br />
local musicOffMenuItem = cc.MenuItemImage:create("menu/off.png", "menu/off.png")<br />
local musicToggleMenuItem = cc.MenuItemToggle:create(musicOnMenuItem, musicOffMenuItem)<br />
musicToggleMenuItem:setPosition(director:convertToGL(cc.p(818, 362)))    <br />
local function menuMusicToggleCallback(sender)<br />
    cclog("Music Toggle.")<br />
end<br />
musicToggleMenuItem:registerScriptTapHandler(menuMusicToggleCallback)<br /><br />
-- Ok按钮<br />
local okMenuItem = cc.MenuItemImage:create(<br />
    "menu/ok-down.png",<br />
    "menu/ok-up.png")<br />
okMenuItem:setPosition(director:convertToGL(cc.p(600, 510)))<br /><br />
local mn = cc.Menu:create(soundToggleMenuItem, musicToggleMenuItem,okMenuItem)<br />
mn:setPosition(cc.p(0, 0))<br />
layer:addChild(mn)<br /><br />
------------------------------EditBox--------------------------------<br />
local  sprite = ccui.Scale9Sprite:create(activeLayer:addImgFile(string.format("%sad_activity_codebg.png", activePath)))<br />
local codeInput = ccui.EditBox:create(cc.size(350, 50), sprite,sprite,sprite)<br />
codeInput:setPlaceholderFont(activeLayer:GetTtfFont(), 24)<br />
codeInput:setFont(activeLayer:GetTtfFont(), 24)<br />
if appLoc ~= 1 and appLoc ~= 16 then<br />
    codeInput:setPlaceholderFont(activeLayer:GetTtfFont(), 22)<br />
    codeInput:setFont(activeLayer:GetTtfFont(), 22)<br />
end<br />
codeInput:setPlaceHolder(getLocalString("input_tip", appLoc));<br />
codeInput:setFontColor(cc.c3b(255, 255, 255))<br />
codeInput:setMaxLength(24)<br />
codeInput:setPosition(cc.p(cPosX,150))    <br />
bgSprite:addChild(codeInput)<br /><br />
local function editboxEventHandler(eventType)<br />
        if eventType == "began" then --编辑框开始编辑时调用<br />
            strFmt = string.format("editBox %p DidBegin !", codeInput)<br />
            print(strFmt)<br />
        elseif eventType == "ended" then --编辑框完成时调用<br />
            strFmt = string.format("editBox %p DidEnd !", codeInput)<br />
            print(strFmt)<br />
        elseif eventType == "return" then --编辑框return时调用<br />
            strFmt = string.format("editBox %p was returned !",codeInput)<br />
            --判断是哪个编辑框，在多个编辑框同时绑定此函数时 需判断时哪个编辑框<br />
            if codeInput == EditName then <br />
              --当编辑框EditName 按下return 时到此处<br />
            elseif codeInput == EditPassword then<br />
            --当编辑框EditPassword  按下return 时到此处<br />
            elseif codeInput == EditEmail then<br />
            --当编辑框EditEmail   按下return 时到此处<br />
            end<br />
            print(strFmt)<br />
        elseif eventType == "changed" then --编辑框内容改变时调用<br />
            strFmt = string.format("editBox %p TextChanged, text: %s ", codeInput, codeInput:getText())<br />
            print(strFmt)<br />
        end<br />
end<br />
codeInput:registerScriptEditBoxHandler(editboxEventHandler)<br /><br />
------------------------------Button--------------------------------<br />
local bt = ccui.Button:create()<br />
bt:loadTextures("cr_btn_gr_n.png", "cr_btn_gr_p.png", "", 1) --1:从plist文件中获取 0:从本地获取资源<br />
bt:setCascadeOpacityEnabled(true)--开启透明度<br />
bt:setScale9Enabled(true)<br />
bt:setContentSize(cc.size(280, 60))  --按钮的大小<br />
bt:loadTextureNormal("132.png",1)<br />
bt:setPosition(cc.p(180, 270 - i * 90))<br />
bt:setTouchEnabled(false)<br />
bt:setEnabled(false)<br />
bt:setBright(false)<br />
bt:setTitleText("123")--按钮上的字<br />
bt:setTitleFontName("Arial")<br />
bt:setTitleFontSize(22)<br />
layer:addChild(bt)<br />
bt:addTouchEventListener(<br />
    function(sender, eventType)<br />
        if eventType == ccui.TouchEventType.ended then<br />
            --实现内容<br />
        end<br />
    end<br />
)<br /><br />
-- bt:addTouchEventListener(upBtnCallback)<br />
-- local function upBtnCallback(sender, eventType)<br />
--     if eventType == ccui.TouchEventType.ended then<br />
--         --实现内容<br />
--     end<br />
-- end<br />
------------------------------ImageView--------------------------------<br />
local imgIcon = ccui.ImageView:create()<br />
imgIcon:loadTexture("cr_gem_tag.png", 1)<br />
imgIcon:setPosition(cc.p(30, 30))<br />
imgBk:setScale9Enabled(true)<br />
imgBk:setCapInsets(cc.rect(15,15,1,1))<br />
imgBk:setContentSize(cc.size(360, 360))<br />
imgIcon:setTouchEnabled(false)<br />
imgIcon:setOpacity(200)<br />
layer:addChild(imgIcon)<br /><br />
------------------------------Text--------------------------------<br />
local num = ccui.Text:create()<br />
num:setFontName(appFont)<br />
num:setFontSize(22)<br />
num:setColor(cc.c3b(255, 255, 255))<br />
num:setString(tostring(btText.num))<br />
num:setTextAreaSize(cc.size(240, 60))<br />
num:setPosition(cc.p(65, 30))<br />
num:setTouchEnabled(false)<br />
num:ignoreContentAdaptWithSize(false) --自动换行<br />
num:setContentSize(cc.size(560, 460))<br />
num:setTextHorizontalAlignment(cc.TEXT_ALIGNMENT_LEFT)--水平对齐方式<br />
num:setTextVerticalAlignment(cc.VERTICAL_TEXT_ALIGNMENT_CENTER)--垂直对齐方式<br />
num:getVirtualRenderer():enableShadow(cc.c4b(0, 0, 0, 150), cc.size(2,-2)) --num:getVirtualRenderer()为Label类型<br />
layer:addChild(num)<br /><br />
------------------------------tableView--------------------------------<br />
tableView = cc.TableView:create(cc.size(810, 440))<br />
tableView:setDirection(cc.SCROLLVIEW_DIRECTION_VERTICAL)<br />
tableView:setVerticalFillOrder(cc.TABLEVIEW_FILL_TOPDOWN)<br />
tableView:setColor(cc.c3b(255,255,255))<br />
tableView:setPosition(cc.p(10, 10))<br />
tableView:setDelegate()<br />
imgBk:addChild(tableView)<br />
tableView:registerScriptHandler(function(tableView)<br />
    return 1<br />
end, cc.NUMBER_OF_CELLS_IN_TABLEVIEW)  <br /><br />
tableView:registerScriptHandler(function(tableView, idx)<br />
    return 960, 640<br />
end, cc.TABLECELL_SIZE_FOR_INDEX)<br /><br />
tableView:registerScriptHandler(function(tableView, idx)<br />
    local pDelCell = tableView:dequeueCell()<br />
    while (pDelCell ~= nil) do<br />
        pDelCell:removeAllChildren()<br />
        pDelCell:removeFromParent()<br />
        pDelCell = tableView:dequeueCell()<br />
    end<br />
    local cell = tableView:dequeueCell()<br />
    if cell == nil then<br />
        cell = cc.TableViewCell:create()<br />
        local cellBg = ccui.ImageView:create("ac_bk.png", 1)<br />
        cellBg:setPosition(cc.p(cellWidth / 2.0, cellHeight / 2.0 + 5))<br />
        cellBg:setScale9Enabled(true)<br />
        cellBg:setContentSize(cc.size(cellWidth  - 10,90))<br />
        cell:addChild(cellBg)     <br />
    end<br />
    return cell<br />
end, cc.TABLECELL_SIZE_AT_INDEX) <br />
tableView:reloadData()<br /><br />
-- tableView:registerScriptHandler(CueResultLayer.scrollViewDidScroll,cc.SCROLLVIEW_SCRIPT_SCROLL)<br />
-- tableView:registerScriptHandler(CueResultLayer.scrollViewDidZoom,cc.SCROLLVIEW_SCRIPT_ZOOM)<br />
-- tableView:registerScriptHandler(CueResultLayer.tableCellTouched,cc.TABLECELL_TOUCHED)<br />
-- tableView:registerScriptHandler(CueResultLayer.cellSizeForTable,cc.TABLECELL_SIZE_FOR_INDEX)<br />
-- tableView:registerScriptHandler(CueResultLayer.tableCellAtIndex,cc.TABLECELL_SIZE_AT_INDEX)<br />
-- tableView:registerScriptHandler(CueResultLayer.numberOfCellsInTableView,cc.NUMBER_OF_CELLS_IN_TABLEVIEW)<br />
-- function CueResultLayer.scrollViewDidScroll(view)<br />
-- end<br /><br />
-- function CueResultLayer.scrollViewDidZoom(view)<br />
-- end<br /><br />
-- function CueResultLayer.tableCellTouched(table,cell)<br />
-- end<br /><br />
-- function CueResultLayer.cellSizeForTable(table,idx) <br />
--     return 960,640<br />
-- end<br /><br />
-- function CueResultLayer.tableCellAtIndex(table, idx)<br />
    <br />
--     local cell = table:dequeueCell()<br />
--     while ( cell ~= nil ) do<br />
--        cell:removeFromParent()<br />
--        cell = table:dequeueCell()<br />
--     end<br />
   <br />
--     if nil == cell then<br />
--         cell = cc.TableViewCell:new()<br /><br />
--         local propId, propgrade = CueResultLayer:analysisInfo(CueResultLayer.reslutList[idx + 1])<br /><br />
--         local cellBg = ccui.Scale9Sprite:createWithSpriteFrameName("Gray_Bg.png")<br />
--         cellBg:setContentSize(cc.size(CELL_WIDTH, CueResultLayer._cellHeight[idx]))<br />
--         cellBg:setPosition(cc.p(CELL_WIDTH/2, CueResultLayer._cellHeight[idx] / 2))<br />
--         cell:addChild(cellBg)<br />
--     end<br /><br />
--     return cell<br />
-- end<br /><br />
-- function CueResultLayer.numberOfCellsInTableView(table)<br />
--    return 1<br />
-- end<br />
------------------------------ListView--------------------------------<br />
local listView = ccui.ListView:create()<br />
listView:setContentSize(cc.size(500,95))<br />
listView:setPosition(5, 50)<br />
listView:setDirection(ccui.ScrollViewDir.vertical)<br />
listView:setGravity(ccui.ListViewGravity.centerVertical)<br />
listView:setBounceEnabled(true)<br />
listView:setItemsMargin(25)<br />
listView:setScrollBarEnabled(false)<br />
listView:pushBackDefaultItem()<br />
layer:addChild(listView)<br /><br />
for i = 1, 3 do<br />
    local custom_item = ccui.Layout:create()<br />
    custom_item:setContentSize(cc.size(580, 140))<br />
    listView:pushBackCustomItem(custom_item)<br /><br />
    local spBg = cc.Sprite:create(activeLayer:addImgFile(activePath .. "row_show.png"))<br />
    spBg:setAnchorPoint(cc.p(0,0))<br />
    custom_item:addChild(spBg);<br />
end  <br /><br />
------------------------------LoadingBar--------------------------------<br />
local progress = ccui.LoadingBar:create()<br />
progress:loadTexture("ac_pross.png", 1)<br />
progress:setPercent(0)<br />
progress:setPosition(627, 345)  <br />
layer:addChild(progress,2) <br /><br />
------------------------------RichText--------------------------------<br />
local richText = ccui.RichText:create()<br />
richText:ignoreContentAdaptWithSize(true)<br />
richText:setAnchorPoint(cc.p(0.5,0.5))<br />
local re1 = ccui.RichElementText:create(1, cc.c3b(0xa3, 0xa5, 0xe6), 255, "123", "Arial", 20)<br />
local re2 = ccui.RichElementText:create(2, cc.c3b(0x22,0x9d,0x60), 255,  "123", "Arial", 20)<br />
richText:pushBackElement(re1)<br />
richText:pushBackElement(re2)<br />
layer:addChild(richText)<br /><br />
------------------------------TextField--------------------------------<br />
local  codeInput = ccui.TextField:create(getLocalString("input_tip", appLoc),activeLayer:GetTtfFont(), 24)<br />
codeInput:setTouchAreaEnabled(true)<br />
codeInput:setTouchSize(cc.size(350,60))<br />
codeInput:setMaxLengthEnabled(true)<br />
codeInput:setTouchEnabled(true)<br />
codeInput:setCursorEnabled(true)<br />
codeInput:setColor(cc.c3b(255, 255, 255))<br />
codeInput:setMaxLength(24)<br />
codeInput:setScaleX(1/1.4)<br />
codeInput:setAnchorPoint(cc.p(0,0.5))<br />
codeInput:setPosition(cc.p(0,22)) <br />
codeInput:addEventListener(function(sender, eventType)<br />
    if eventType == 0 then --键盘弹出<br />
        if codeInput:getStringLength() &lt;= 2 then<br />
            codeInput:setAnchorPoint(cc.p(0.5,0.5))<br />
        end<br />
        if codeInput:getString() ~= "" then<br />
            codeInput:setAnchorPoint(cc.p(0,0.5))<br />
        end  <br />
    elseif eventType == 1 then --键盘隐藏<br />
        if codeInput:getString() == "" then<br />
            codeInput:setString("")<br />
            codeInput:setAnchorPoint(cc.p(0,0.5))<br />
        end           <br />
    elseif eventType == 2 then --输入文本<br />
        codeInput:setAnchorPoint(cc.p(0,0.5))<br />
    elseif eventType == 3 then --删除文本<br />
        codeInput:setAnchorPoint(cc.p(0,0.5))<br />
    end<br />
end)<br />
layer:addChild(codeInput)<br /><br />
------------------------------CocosStudio--------------------------------<br />
--获取widget<br />
local rootWidget = ccs.GUIReader:getInstance():widgetFromJsonFile("ChristmasLayer.ExportJson")  --cocos studio<br />
layer:addChild(rootWidget)<br />
--获取对象<br />
--第一种方式  父类获取子类<br />
local labelTitle = rootWidget:getChildByName("Label_title")<br />
labelTitle:setFontName("..ttf") --字体名称<br />
labelTitle:setFontSize(18)--字体大小<br />
labelTitle:getVirtualRenderer():enableOutline(cc.c4b(255, 255, 0, 255), 1.0)--描边<br />
--第二种方式<br />
local labelTitle = ccui.Helper:seekWidgetByName(rootWidget,"Label_title")<br />
--注意，从CocosStudio获取对象，如果是文本框(Text)、输入框(EditBox)、按钮(Button)、图片(ImageView)<br /><br />
------------------------------动画Animate--------------------------------<br />
--蛋裂开动画<br />
local spriteFrame  = cc.SpriteFrameCache:getInstance()<br />
spriteFrame:addSpriteFramesWithFile("run.plist")  --添加plist文件<br />
local animation = cc.Animation:create()<br />
for i = 1, 25 do<br />
    --第一种<br />
    -- local frameName = string.format("h%d.png",i)<br />
    -- cclog("frameName = %s",frameName)<br />
    -- local spriteFrame = spriteFrame:getSpriteFrameByName(frameName)<br />
    -- animation:addSpriteFrame(spriteFrame)<br /><br />
    --第二种<br />
    local frameName = string.format("fire/campFire%02d.png",i)<br />
    cclog("frameName = %s",frameName)<br />
    animation:addSpriteFrameWithFile(frameName)<br />
end<br /><br />
animation:setDelayPerUnit(1. / 25.0)<br />
animation:setRestoreOriginalFrame(true)<br />
local action = cc.Animate:create(animation)<br /><br />
local breakSprite = cc.Sprite:createWithSpriteFrameName("egg_" .. c .. " (1).png")<br />
breakSprite:setPosition(87, 191)<br />
imgIcon:addChild(breakSprite, 4, 4)<br />
breakSprite:runAction(cc.Sequence:create(cc.DelayTime:create(0.3), action, cc.RemoveSelf:create()))<br /><br />
--第二种<br />
local frameWidth = 105<br />
local frameHeight = 95<br /><br />
-- create dog animate<br />
local textureDog = cc.Director:getInstance():getTextureCache():addImage("dog.png")<br />
local rect = cc.rect(0, 0, frameWidth, frameHeight)<br />
local frame0 = cc.SpriteFrame:createWithTexture(textureDog, rect)<br />
rect = cc.rect(frameWidth, 0, frameWidth, frameHeight)<br />
local frame1 = cc.SpriteFrame:createWithTexture(textureDog, rect)<br /><br />
local spriteDog = cc.Sprite:createWithSpriteFrame(frame0)<br />
spriteDog:setPosition(self.origin.x, self.origin.y + self.visibleSize.height / 4 * 3)<br />
spriteDog.isPaused = false<br /><br />
local animation = cc.Animation:createWithSpriteFrames({frame0,frame1}, 0.5)<br />
local animate = cc.Animate:create(animation);<br />
spriteDog:runAction(cc.RepeatForever:create(animate))<br />
------------------------------XML动画Armature--------------------------------<br />
ccs.ArmatureDataManager : getInstance() : addArmatureFileInfo(appPath .. "xiaochou01.png",appPath .. "xiaochou01.plist", appPath .. "xiaochou01.xml")<br />
local armature = ccs.Armature : create("xiaochoudonghua")<br />
armature : getAnimation() : playWithIndex(0)<br />
armature : setAnchorPoint(cc.p(0.5, 0.5))<br />
armature : setPosition(170, 200)<br />
armature : getAnimation() : setSpeedScale(20 / 80)<br />
armature : setScale(0.8)<br />
layer : addChild(armature) <br /><br />
------------------------------粒子特效--------------------------------<br />
local particleSystem = cc.ParticleSystemQuad:create("snow.plist")<br />
particleSystem:setPosition(cc.p(size.width/2, size.height + 50))<br />
layer:addChild(particleSystem)<br /><br />
------------------------------动作Action--------------------------------<br />
local action1 = cc.MoveTo:create(0.5, cc.p(480, -320))<br />
local callfunc = cc.CallFunc:create(HideLayerFinishCallBack)<br />
local action2 = cc.EaseExponentialOut:create(action1)<br />
local action = cc.Sequence:create(action2, callfunc)<br />
layer:runAction(action)<br /><br />
local function CallBack1()<br />
    sprite:runAction(cc.TintBy:create(0.5, 255, 0, 255))<br />
end<br />
function MyActionScene:OnCallFunc()<br />
    local acf = cc.CallFunc:create(CallBack1)<br />
    sprite:runAction(acf)<br />
end<br /><br />
local function CallBack2(pSender)<br />
    local sp = pSender<br />
    sp:runAction(cc.TintBy:create(1, 255, 0, 255))<br />
end<br />
function MyActionScene:OnCallFuncN()<br />
    local acf = cc.CallFunc:create(CallBack2)<br />
    sprite:runAction(cc.Sequence:create(acf))<br />
end<br /><br />
local function CallBack3(pSender, table)<br />
    local sp = pSender<br />
    cclog("CallBack3 %d", table[1])<br />
    sp:runAction(cc.TintBy:create(table[1], table[2], table[3], table[4]))<br />
end<br />
function MyActionScene:OnCallFuncND()<br />
    local acf = cc.CallFunc:create(CallBack3, {1, 255, 0, 255})<br />
    sprite:runAction(acf)<br />
end<br />
------------------------------遮罩ClippingNode--------------------------------<br />
local stencil = cc.Sprite:create()<br />
stencil:setTextureRect(cc.rect(0, 0, 420, 220))<br />
stencil:setColor(cc.c3b(255,255,255))   <br />
local  clippnode = cc.ClippingNode:create(stencil)<br />
clippnode:setPosition(600, 140)<br />
clippnode:setInverted(false);           <br />
layer:addChild(clippnode)<br /><br />
------------------------------定时器scheduler--------------------------------<br />
--自定义定时器<br />
local function updateLeftTime(f)<br />
    --实现内容<br />
end<br /><br />
local schedule_updateLeftTime = nil<br />
local scheduler = cc.Director:getInstance():getScheduler()  --<br />
schedule_updateLeftTime = scheduler:scheduleScriptFunc(updateLeftTime, 1.0, false) --时间调度器<br /><br />
local function onNodeEvent(event)  --退出事件停止调用定时器<br />
    --有五个状态 enter、enterTransitionFinish、exit、exitTransitionStart、cleanup<br />
    if event == "exitTransitionStart" then<br />
        if schedule_updateLeftTime then  <br />
            scheduler:unscheduleScriptEntry(schedule_updateLeftTime)  <br />
            schedule_updateLeftTime = nil<br />
        end<br />
    end<br />
end<br />
--创建退出时候监听 某个节点退出<br />
node:registerScriptHandler(onNodeEvent) <br />
updateLeftTime(0)<br /><br />
--默认定时器<br />
local function update(delta)<br />
    local x,y = label:getPosition()<br />
    label:setPosition(cc.p(x + 2, y - 2))<br />
end<br /><br />
--开始游戏调度<br />
layer:scheduleUpdateWithPriorityLua(update, 0)<br /><br />
function onNodeEvent(tag)<br />
    if tag == "exit" then<br />
        --开始游戏调度<br />
        layer:unscheduleUpdate()<br />
    end<br />
end<br />
layer:registerScriptHandler(onNodeEvent)<br /><br />
------------------------------单点触摸事件--------------------------------<br />
--注册触摸事件<br />
local function onTouchBegin(touch, event)<br />
    return true<br />
end<br /><br />
local function onTouchMoved(touch, event)<br />
    local location = touch:getLocation()<br />
    cclog("onTouchMoved: %0.2f, %0.2f", location.x, location.y)<br />
end<br /><br />
local function onTouchEnded(touch, event)<br />
    -- 获取事件所绑定的 node<br />
    local node = event:getCurrentTarget()<br />
    local locationInNode = node:convertToNodeSpace(touch:getLocation())<br />
    local s = imgBk:getContentSize()<br />
    local rect = cc.rect(150, 150, s.width-20, s.height)<br /><br />
    -- 点击范围判断检测<br />
    if cc.rectContainsPoint(rect, locationInNode) == false then<br /><br />
    end<br />
end<br /><br />
local listener = cc.EventListenerTouchOneByOne:create()<br />
listener:registerScriptHandler(onTouchBegin, cc.Handler.EVENT_TOUCH_BEGAN )<br />
listener:registerScriptHandler(onTouchMoved,cc.Handler.EVENT_TOUCH_MOVED )<br />
listener:registerScriptHandler(onTouchEnded, cc.Handler.EVENT_TOUCH_ENDED )<br />
listener:setSwallowTouches(true)<br />
local eventDispatcher = layer:getEventDispatcher()<br />
eventDispatcher:addEventListenerWithSceneGraphPriority(listener, layer)<br /><br />
-- local listener2 = listener1:clone()<br />
-- eventDispatcher:addEventListenerWithSceneGraphPriority(listener2, boxB)<br />
-- local listener3 = listener1:clone()<br />
-- eventDispatcher:addEventListenerWithSceneGraphPriority(listener3, boxC)				</article>
					<div>
												本文网址：<a href="http://www.bnee.net/article/2223856.html">http://www.bnee.net/article/2223856.html</a>
					</div>				
			</section>
			
						<br>
		
						
            <div class="listing clearfix">
                <h3 class="boxhead">相关文章</h3>
                <ul class="listun">
                                      					<li class="clearfix">
					<div class="title">
						<div style="float: left;">
							<h2><a href="http://www.bnee.net/article/62710.html" rel="bookmark">Sys&period;UI&period;Data&period;DataNavigator与Sys&period;UI&period;Data&period;SortBehavior</a></h2>
						</div>
						<div style="float: right">
						</div>
						<div style="clear: both;"></div>
					</div>
					<div class="media">
						
												
						<div class="media-body">
							这次我想讨论与分析的内容是 Sys.UI.Data.DataNavigator与Sys.UI.Data.SortBehavior.在这之前,可能感兴趣的朋友们需要先了解一下 Atlas Client Script中Data Control的 ...						</div>
					</div>
					</li>
                                        					<li class="clearfix">
					<div class="title">
						<div style="float: left;">
							<h2><a href="http://www.bnee.net/article/47028.html" rel="bookmark">Photoshop快捷键  Windows 快捷键 完整篇</a></h2>
						</div>
						<div style="float: right">
						</div>
						<div style="clear: both;"></div>
					</div>
					<div class="media">
						
												
						<div class="media-body">
							Photoshop快捷键完整篇 工具箱(多种工具共用一个快捷键的可同时按[Shift]加此快捷键选取) 矩形.椭圆选框工具 [M] 裁剪工具 [C] 移动工具 [V] 套索.多边形套索.磁性套索 [L] 魔棒工具 [W] 喷枪工具 [J]  ...						</div>
					</div>
					</li>
                                        					<li class="clearfix">
					<div class="title">
						<div style="float: left;">
							<h2><a href="http://www.bnee.net/article/74292.html" rel="bookmark">MFC实现在VIEW类中显示图片</a></h2>
						</div>
						<div style="float: right">
						</div>
						<div style="clear: both;"></div>
					</div>
					<div class="media">
						
												
						<div class="media-body">
							/* 函数功能:显示JPG和GIF图片 参数说明 pDC:设备环境对象  strPath:要显示的图片路径  x:要显示的X位置   y:要显示的Y位置 */        BOOL CShowJpegView::ShowJpgGif(CD ...						</div>
					</div>
					</li>
                                        					<li class="clearfix">
					<div class="title">
						<div style="float: left;">
							<h2><a href="http://www.bnee.net/article/78178.html" rel="bookmark">电脑windows系统快捷键</a></h2>
						</div>
						<div style="float: right">
						</div>
						<div style="clear: both;"></div>
					</div>
					<div class="media">
						
												
						<div class="media-body">
							简要介绍F1-F12功能键的功能[1]  F1 显示当前程序或者windows的帮助内容. F2 当你选中一个文件的话,这意味着&quot;重命名&quot; F3 当你在桌面上的时候是打开&quot;查找:所有文件&quot; 对话框 F ...						</div>
					</div>
					</li>
                                        					<li class="clearfix">
					<div class="title">
						<div style="float: left;">
							<h2><a href="http://www.bnee.net/article/79984.html" rel="bookmark">QT基础面试题及答案</a></h2>
						</div>
						<div style="float: right">
						</div>
						<div style="clear: both;"></div>
					</div>
					<div class="media">
						
												
						<div class="media-body">
							QT 理论试题1以下关于 QT 的描述正确的是 a. 是一个不跨平台的 C++图形用户界面 b. 由挪威 TrollTech 公司出品 c. 只支持 Unix.Linux d. QT API 和开发工具对所支持的平台是不一致的 2以下关于  ...						</div>
					</div>
					</li>
                                        					<li class="clearfix">
					<div class="title">
						<div style="float: left;">
							<h2><a href="http://www.bnee.net/article/90012.html" rel="bookmark">windows快捷键使用</a></h2>
						</div>
						<div style="float: right">
						</div>
						<div style="clear: both;"></div>
					</div>
					<div class="media">
						
							<img src="http://net.cdn.tupan.net/thumb/120x90/a/06/a060aeace9de3815cbf2186c0d03ee1b.jpg" alt="windows快捷键使用" title="windows快捷键使用" />					
						<div class="media-body">
							快捷方式复选框,则选中或清除该复选框箭头键 如果活动选项是一组选项按钮,则选择某个按钮windows键或CTRL+ESC 打开开始菜单CTRL+ALT+DELETE 在win9x中打开关闭程序对话框CTRL+SHIFT+ESC 或 CTRL ...						</div>
					</div>
					</li>
                                        					<li class="clearfix">
					<div class="title">
						<div style="float: left;">
							<h2><a href="http://www.bnee.net/article/106450.html" rel="bookmark">C&num; 控件</a></h2>
						</div>
						<div style="float: right">
						</div>
						<div style="clear: both;"></div>
					</div>
					<div class="media">
						
												
						<div class="media-body">
							只为大家使用查询方便,供大家免费下载,请不要忘记原作者benben的辛苦劳动! A窗体类控件 1.窗体 1.常用属性 (1)Name属性:用来获取或设置窗体的名称,在应用程序中可通过Name属性来引用窗体. (2) WindowState属 ...						</div>
					</div>
					</li>
                                        					<li class="clearfix">
					<div class="title">
						<div style="float: left;">
							<h2><a href="http://www.bnee.net/article/44934.html" rel="bookmark">小K智能插座的OP专用固件&comma; 用LUA实现了乐为物联的TCP反控&comma;自用</a></h2>
						</div>
						<div style="float: right">
						</div>
						<div style="clear: both;"></div>
					</div>
					<div class="media">
						
							<img src="http://net.cdn.tupan.net/thumb/120x90/e/f1/ef1d256ea82d16f9ca17af55c5c2ddb5.png" alt="小K智能插座的OP专用固件&comma; 用LUA实现了乐为物联的TCP反控&comma;自用" title="小K智能插座的OP专用固件&comma; 用LUA实现了乐为物联的TCP反控&comma;自用" />					
						<div class="media-body">
							Flash为4M, 内存为32M,  控制继电器为GPIO 26, 同时红灯亮. 按键为GPIO 11, 蓝灯同703N  按一下开, 再按一下关, 长按 恢复出厂设置 手机端: WiFi连接openwrt-xu1, 密码: 1234567 ...						</div>
					</div>
					</li>
                       
                </ul>  
            </div> 			
					
		
		
		</div>
		<div class="col-4 d-none d-xl-block">
			
			


<div class="sidebox">
	<div class="boxhead">
		<span>精彩推荐</span>
	</div>
	<div class="boxcontent">
				